"use strict";function _createForOfIteratorHelper(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,t=function(){};return{s:t,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:t}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,c=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return o=e.done,e},e:function(e){c=!0,a=e},f:function(){try{o||null==r.return||r.return()}finally{if(c)throw a}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(r="Object"===r&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var targetNode=document.getElementById("addsearch-results"),config={childList:!0,subtree:!0},callback=function(e,t){var r,n=_createForOfIteratorHelper(e);try{for(n.s();!(r=n.n()).done;){var a,o=_createForOfIteratorHelper(r.value.addedNodes);try{for(o.s();!(a=o.n()).done;){var c=a.value;"addsearch-nohits"===c.id&&function(){var e=c.querySelector("p em"),t=document.getElementById("addsearch-notifications");setTimeout(function(){t.textContent="",t.textContent="No results found for ".concat(e.textContent,". Please try different term")},300)}(),"addsearch-result-item-container-1"===c.id&&setTimeout(function(){console.log("Found Results");var e=document.querySelector("input.addsearch"),t=document.getElementById("addsearch-notifications");t.textContent="",t.textContent="Results have been found for your search term, ".concat(e.value)},300),"addsearch-rp-paging"===c.parentElement.id&&(c.innerHTML.match(/\d/,"gm")&&(console.log("Found a number"),c.setAttribute("aria-label","Search Result Page ".concat(c.textContent)),c.innerHTML='<span class="screen-reader-text">Page</span> '.concat(c.innerHTML)),c.textContent.includes("previous")&&(console.log("Found a previous"),c.setAttribute("aria-label","Previous Search Results Page"),c.innerHTML="".concat(c.innerHTML,' <span class="screen-reader-text">Page</span>')),c.textContent.includes("next")&&(console.log("Found a next"),c.setAttribute("aria-label","Next Search Results Page"),c.innerHTML="".concat(c.innerHTML,' <span class="screen-reader-text">Page</span>')))}}catch(e){o.e(e)}finally{o.f()}}}catch(e){n.e(e)}finally{n.f()}},observer=new MutationObserver(callback);observer.observe(targetNode,config);